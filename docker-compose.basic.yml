services:
  # https://elnatantorres.medium.com/configuring-rabbitmq-on-its-startup-with-docker-d219af4b751a
  rabbitmq:
    image: bitnami/rabbitmq:3.13.3
    environment:
      RABBITMQ_LOAD_DEFINITIONS: "true"
      # definition is set with -> user: password
      RABBITMQ_DEFINITIONS_FILE: /etc/rabbitmq/definitions.json
      RABBITMQ_PLUGINS: rabbitmq_shovel rabbitmq_shovel_management rabbitmq_delayed_message_exchange
      RABBITMQ_COMMUNITY_PLUGINS: https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/v3.12.0/rabbitmq_delayed_message_exchange-3.12.0.ez
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./scripts/configs/rabbitmq-definition.json:/etc/rabbitmq/definitions.json
      - ./scripts/configs/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq_data:/bitnami/rabbitmq/mnesia

  sonarqube:
    image: sonarqube:10.6-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    #        environment:
    #            # CREATE USER sonar WITH PASSWORD 'sonar';
    #            # CREATE DATABASE sonar owner sonar;
    #            # GRANT ALL ON SCHEMA public TO sonar;
    #            - SONAR_JDBC_URL=jdbc:postgresql://postgresql:5432/sonar
    #            - SONAR_JDBC_USERNAME=sonar
    #            - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonar_data:/opt/sonarqube

  artifactory-oss:
    image: releases-docker.jfrog.io/jfrog/artifactory-jcr:7.84.15
    container_name: artifactory-oss
    environment:
      - JF_SHARED_DATABASE_TYPE=postgresql
      # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to PostgreSQL
      - JF_SHARED_DATABASE_USERNAME=artifactory
      - JF_SHARED_DATABASE_PASSWORD=password
      - JF_SHARED_DATABASE_URL=jdbc:postgresql://postgresql:5432/artifactory
      - JF_SHARED_DATABASE_DRIVER=org.postgresql.Driver
    ports:
      - "8081:8081"
      - "8082:8082"
    volumes:
      - artifactory_data:/var/opt/jfrog/artifactory
      - /etc/localtime:/etc/localtime:ro

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    platform: linux/amd64
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
      - /etc/localtime:/etc/localtime:ro

  selenium:
    # selenium 需要 chrome 浏览器和 chromeDriver 版本一致
    image: selenium/standalone-chrome:4.22.0-20240621
    platform: linux/amd64
    ports:
      - "4444:4444"

  yapi:
    image: jayfong/yapi:latest
    container_name: yapi
    platform: linux/amd64
    environment:
      - YAPI_ADMIN_ACCOUNT=admin@docker.yapi
      - YAPI_ADMIN_PASSWORD=adm1n
      - YAPI_CLOSE_REGISTER=true
      - YAPI_DB_SERVERNAME=mongo
      - YAPI_DB_PORT=27017
      - YAPI_DB_DATABASE=yapi
      - YAPI_MAIL_ENABLE=false
      - YAPI_LDAP_LOGIN_ENABLE=false
      - YAPI_PLUGINS=[]
    ports:
      - "3000:3000"
    depends_on:
      - mongo

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  jenkins:
    image: jenkins/jenkins:jdk21
    container_name: jenkins
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro

  gitlab:
    image: gitlab/gitlab-ce
    platform: linux/amd64
    container_name: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.example.com'

        gitlab_rails['time_zone'] = 'Asia/Shanghai'
        gitlab_rails['gitlab_default_theme'] = 2
        gitlab_rails['gitlab_shell_ssh_port'] = 24
        gitlab_rails['backup_keep_time'] = 172800

        gitlab_workhorse['listen_network'] = "tcp"
        gitlab_workhorse['listen_addr'] = "0.0.0.0:8000"

        nginx['enable'] = false
        unicorn['enable'] = false
    ports:
      - '8000:8000'
      - '24:22'
    volumes:
      - gitlab_data:/var/opt/gitlab
      - /etc/localtime:/etc/localtime:ro

  gitlab-runner:
    image: gitlab/gitlab-runner
    container_name: gitlab-runner
    volumes:
      - gitlab_runner_data:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  pyroscope:
    image: grafana/pyroscope
    ports:
      - "4040:4040"

volumes:
  postgres_data:
  sonar_data:
  artifactory_data:
  gitlab_data:
  gitlab_runner_data:
  jenkins_data:
  nexus_data:
  mongo_data:
  rabbitmq_data:
