# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java-version: [ 21 ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: maven

      - name: Test with Maven
        run: mvn -ntp dependency:go-offline test

      - name: Package with Maven
        run: mvn -ntp package -DskipTests

#      - name: Build and Push Docker Image
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
#          IMAGE_NAME: ${{ github.event.repository.name }}
#        run: |
#          docker build . --file Dockerfile -t $DOCKER_USERNAME/$IMAGE_NAME:latest
#          docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
#          docker push $DOCKER_USERNAME/$IMAGE_NAME:latest
