# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY_URL: myregistry.domain.com

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 21 ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test package --ntp
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile.simple --tag ${{ github.event.repository.name }}
      - name: Create a latest image as well
        run: docker tag ${{ github.event.repository.name }} ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
      - name: Push the Docker image with version number
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
      - name: Remove the Docker image with latest tag
        run: docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
      - name: Remove the local image
        run: docker rmi ${{ github.event.repository.name }}
